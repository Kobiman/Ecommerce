@page "/checkout"
<!-- ========================= SECTION PAGETOP ========================= -->
<section class="section-pagetop bg">
    <div class="container">
        <h2 class="title-page">Checkout</h2>
    </div> <!-- container //  -->
</section>
<!-- ========================= SECTION INTRO END// ========================= -->
<!-- ============================ COMPONENT REGISTER   ================================= -->
<div class="card mx-auto" style="max-width:520px; margin-top:40px;">
    <article class="card-body">
        <header class="mb-4"><h4 class="card-title">Delivery Details</h4></header>
        <EditForm Model="@checkoutItem" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-row">
                <div class="col form-group">
                    <label>First name</label>
                    <InputText name="firstName" type="text" class="form-control" placeholder="" @bind-Value="checkoutItem.FirstName"/>
                </div> 
                <div class="col form-group">
                    <label>Last name</label>
                    <InputText name="lastName" type="text" class="form-control" placeholder="" @bind-Value="checkoutItem.LastName" />
                </div>
            </div>
            <div class="form-group">
                <label>Contact</label>
                <InputText name="contact" type="text" class="form-control" placeholder="" @bind-Value="checkoutItem.Contact" />
                <small class="form-text text-muted">Please provide a valid phone number.</small>
            </div>
            <div class="form-group">
                <label>Email (Optional)</label>
                <InputText name="email" type="email" class="form-control" placeholder="" @bind-Value="checkoutItem.Email" />
                <small class="form-text text-muted">Please provide a valid Email Address.</small>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label>Location</label>
                    <InputSelect name="location" id="inputState" class="form-control" @bind-Value="checkoutItem.Location">
                        <option value="Accra">Accra</option>
                        <option value="Kumasi">Kumasi</option>
                        <option selected="" value="Sunyani">Sunyani</option>
                        <option value="Takoradi">Takoradi</option>
                        <option value="Tema">Tema</option>
                    </InputSelect>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary btn-block"> Checkout </button>
            </div>
        </EditForm>
    </article>
</div>
<br>
<br>
<!-- ============================ COMPONENT REGISTER  END.// ================================= -->
@code {
    AddCheckoutItemDto checkoutItem = new AddCheckoutItemDto();

    private async Task HandleValidSubmit()
    {
        checkoutItem.CartItems = cartService.Products.Select(x => new Ecommerce.Models.Dto.CartItemDto 
            { 
                Brand = x.Brand, 
                Description = x.Description,
                Image = x.Image,
                Name = x.Name,
                Quantity = x.Quantity,
                ProductId = x.ProductId,
                TotalPrice = x.TotalPrice,
                UnitPrice = x.UnitPrice
            }).ToList();
        var response = await Http.PostAsJsonAsync("api/Checkout/AddCheckoutItem", checkoutItem);
        var content = await response.Content.ReadFromJsonAsync<Result>();
        if (content is not null && content.IsSucessful)
        {
            checkoutItem = new AddCheckoutItemDto();
            cartService.ClearItems();
            navigation.NavigateTo("/");
            //Snackbar.Add(content.Message, Severity.Success);
            //accountEvents.OnAccountAdded(this);
        }
        else if (content is not null && !content.IsSucessful)
        {
            //Snackbar.Add(content.Message, Severity.Success);
        }
        StateHasChanged();

    }
}
